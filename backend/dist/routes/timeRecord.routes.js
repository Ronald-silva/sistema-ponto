"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.timeRecordRoutes = void 0;
const express_1 = require("express");
const multer_1 = __importDefault(require("multer"));
const TimeRecordController_1 = require("../controllers/TimeRecordController");
const auth_1 = require("../middlewares/auth");
const ensureAdmin_1 = require("../middlewares/ensureAdmin");
const timeRecordRoutes = (0, express_1.Router)();
exports.timeRecordRoutes = timeRecordRoutes;
const timeRecordController = new TimeRecordController_1.TimeRecordController();
const upload = (0, multer_1.default)();
timeRecordRoutes.get('/', auth_1.ensureAuthenticated, timeRecordController.index.bind(timeRecordController));
timeRecordRoutes.get('/my-records', auth_1.ensureAuthenticated, timeRecordController.myRecords.bind(timeRecordController));
timeRecordRoutes.post('/', auth_1.ensureAuthenticated, upload.single('image'), timeRecordController.create.bind(timeRecordController));
timeRecordRoutes.get('/:id', auth_1.ensureAuthenticated, timeRecordController.show.bind(timeRecordController));
const adminMiddlewares = [auth_1.ensureAuthenticated, ensureAdmin_1.ensureAdmin];
timeRecordRoutes.put('/:id', adminMiddlewares, timeRecordController.update.bind(timeRecordController));
timeRecordRoutes.delete('/:id', adminMiddlewares, timeRecordController.delete.bind(timeRecordController));
timeRecordRoutes.post('/calculate-overtime', adminMiddlewares, timeRecordController.calculateOvertime.bind(timeRecordController));
